tinymce.PluginManager.add("estilos", function(e) {

    var editor = e;
    var button;
    var dialogWindow = {};
    var _self = this;

    if (! editor.settings.formats) {
        return;
    }

    function getListValues(filter) {

        var currentNodeSelection = '_';
        var parentNodeSelection = '_';
        var fallbackValue = {text: $.translate("NingÃºn estilo aplicable a este elemento"), value: ""};

        if (filter) {
            if (!tinymce.activeEditor.selection) {
                return new Array(fallbackValue);
            }

            var parents = $(tinymce.activeEditor.selection.getNode()).parents("ul, ol, blockquote, pre");
            if (parents.length > 0) {
                parentNodeSelection = parents.get(0).nodeName;
            }

            currentNodeSelection = tinymce.activeEditor.selection.getNode().nodeName;
        }

        var estilosDisponibles = new Array(fallbackValue);
        for (var idx in editor.settings.formats) {
            var seleccion = editor.settings.formats[idx].selector.toLowerCase();
            if (
                filter
                && seleccion.indexOf(currentNodeSelection.toLowerCase()) < 0
                && seleccion.indexOf(parentNodeSelection.toLowerCase()) < 0
            ) {
                continue;
            }

            var styleOption = {};
            styleOption.text = editor.settings.formats[idx].title;
            styleOption.value = idx;
            styleOption.classes = editor.settings.formats[idx].classes;
            styleOption.selector = editor.settings.formats[idx].selector;

            estilosDisponibles.push(styleOption);
        }

        return estilosDisponibles;
    }

    tinymce.activeEditor.addButton("estilos", {
        text : "Estilos",
        tooltip: $.translate('Aplicar estilos al elemento seleccionado'),
        icon :false,
        type: 'splitbutton',
        menu: getListValues(false),
        onshow: function(event) {
            _self.refresh();
        },
        onselect: function (e) {
            tinymce.activeEditor.formatter.toggle(e.control._value);
        },
        onclick: function (event) {
            button.showMenu(true);
        },
        onPostRender: function () {
            button = this;
        }
    });
    _self.refresh = function() {

        if (!button.menu.getEl()) {
            return;
        }

        var currentValues = getListValues(true);
        var selection = $(tinymce.activeEditor.selection.getNode());
        var menuItems = $(button.menu.getEl()).find(".mce-menu-item");


        var kontVisible = 0;
        menuItems.find("span.mce-text").each(function () {

            visible = false;
            active = false;
            var currentNodeValue = $(this).text();

            for (var idx in currentValues) {
                if (currentValues[idx].text == currentNodeValue) {
                    visible = true;
                    kontVisible++;

                    var targetClass = currentValues[idx].classes;
                    var parentsSelector = "ul." + targetClass + ", ol." + targetClass;
                    parentsSelector += ", blockquote." + targetClass +  ", pre." + targetClass;

                    if (currentValues[idx].value) {
                        if (selection.attr("class") == targetClass) {
                            active = true;
                        } else if (selection.parents(parentsSelector).length > 0) {
                            active = true;
                        }
                    }

                    break;
                }
            }

            if (visible) {
               $(this).parent().show();
            } else {
               $(this).parent().hide();
            }

            if (active) {
                $(this).parent().addClass("mce-active");
            } else {
                $(this).parent().removeClass("mce-active");
            }

            if(kontVisible > 1) {
                $(menuItems.get(0)).hide();
            }

        });

        button.menu.reflow();
        button.menu.repaint();
    };
});